{"version":3,"sources":["src/logic/Room.js","src/furniture/Chair.js","src/furniture/Table.js","src/furniture/Sofa.js","src/logic/GothicFurnitureFactory.js","src/logic/ModernFurnitureFactory.js","src/view/Dom.js","src/index.js"],"names":["Room","furniture","push","root","image","document","createElement","constructor","name","src","Error","width","height","appendChild","GothicChair","color","peacesState","metalChairLeg","connectAllPeases","paintTheChair","ModernChair","comfortableChairBack","ModernTable","form","material","chooseMaterial","createForm","GothicTable","ModernSofa","softSeats","design","GothicSofa","hardSeats","GothicFurnitureFactory","ModernFurnitureFactory","Dom","inputsIds","submitButton","getElementById","elements","modernFurnitureFactory","gothicFurnitureFactory","room","furnitureAmount","onSubmit","Object","values","forEach","input","parseInt","value","addFurnitureToRoom","inputId","addEventListener","eventName","el","Array","e","onInputChange","currentTarget","onclick","span","innerHTML","key","i","createChair","createSofa","createTable","addFurnitureToTheRoom","visualiseRoom","images"],"mappings":";;AOAA;;AACA,IAAImC,QAAJ,IACA;AACA;AACA;AACA,AHLA,ACAA,ACAA;ACMA;AACA,AHNA,ACAA,ACAA;ACOA;AACA,AHPA,ACAA,ACAA;ACQA;AACA,INXarB,AEAAc,ADAAN,AFAAtB;ACCT,AEAA,ADAA,AKWJ,APXI,kBAAc,MGA6C,CFA9B,ACAsB;ADAtB,AEA8B,ADAR,AKYvD,APZkB,QCAFe,AEAAS,ADAAD,IAAuC,CDAtB,GEA8B,mEDAxC,CDAC,GEAG,IFAM,GCAsB,WCAQ;AAAA,ADAR,AKavD,QJb+CR,ADAXS,KCA2B,GDAR,oECAA,GDAR,GCAgB,GDAR;ADAtB,AMcjC,APbQ,SAAKvB,SAAL,GAAiB,EAAjB;AGDuD,ADAR,AKevD,APbK;ACDG,IGCKgC,ACAAC,ACAAC,KLDAnB,WAAL,GAAmB,eAAnB;AACA,AEDA,ADAA,AIEJ,SLDSD,AEDAS,ADAAD,IAAL,CDCA,ECDY,CDCC,AEDb,AGEU,GHFM,KDAhB,EDCA,MEDA;AFEA,AEDA,ADAA,AICU,SLALN,AEDAF,ADAAS,KCAL,GAAa,ADAb,GAAgB,EDChB,GAAqB,EEDrB,EFCA,ICDA;ADEA,AEDA,ADAA,SDCKN,AEDAW,ADAAd,KAAL,GAAa,CCAb,GAAiB,GDAjB,CDCA,AEDA,iBHAkBd,WAAW;ACE7B,AEDA,ADAA,AFAA,AMDU,SLELkB,AEDAM,ADAAA,EFAAxB,SAAL,CAAeC,CCCf,CAAmBa,AEDnB,ADAA,CCAoBS,ADAAA,CFApB,CAAoBvB,ECCpB,IEDA,ADAA,GFAA;ACEH,AEDG,ADAA,AFAH,SGAQ6B,ADAAJ,MCAL,CAAYX,GDAZ,CAAgBQ,CCAhB,GDAA;ACCH,ADAA,AIFG,SAAKa,SAAL,GAAiB,CACb,kBADa,EACO,kBADP,EAC2B,iBAD3B,EAEb,kBAFa,EAEO,kBAFP,EAE2B,iBAF3B,CAAjB;AAIA,SAAKC,YAAL,GAAoBhC,QAAQ,CAACiC,CFLnB,ACAA,aCKU,CAAwB,QAAxB,CAApB;AFJA,ACAA,ACKA,SAAKC,IFLE,ACAA,IDAIzB,ACAAM,ACKX,GAAgB,EAAhB,YNHUjB,CIFH,ACAA,EDAP,ACAA,GLEgBF,WAAW;AID9B,ACAA,ALEG,AMGA,SAAKuC,CNHCpC,KAAK,GAAGC,QAAQ,CAACC,IMGvB,GAA8B,IAAI4B,CLHnB,CDAD,CAAuB,KAAvB,CAAd,qCMG8B,EAA9B;ALFA,AKGA,SAAKO,ELHAzB,WAAL,GAAmB,MKGnB,GAA8B,CHJnBQ,ADAAA,CDCX,EKGkCS,OHJb,ADAA,uCIIS,EAA9B;ALFH,AEDG,ADAA,AFAA,AMIA,SAAKS,EHJAlB,ADAAA,EIIL,CNJQvB,EMII,GHJZ,ADAA,CIIgBD,EHJAwB,ADAAA,CFAC,CAACjB,MGAlB,ADAA,AIIY,EAAZ,GNJQ,CAAsBC,IAA9B;AGCH,ADAA,AFAO,AMIJ,SAAKmC,INJI,WMIT,ENJI,CMImB,EAAvB,KFPU,ACAA;ADCV,ACAA,ALGQvC,UAAAA,GIHD,ACAA,ELGM,CAACK,CIHHkB,ACAAL,ELGH,GAAY,aIHb,ACAA,EDAP,ACAA,aLGQ;AIFX,ACAA,ALGW,AMGR,SAAKsB,QAAL,GAAgB,YAAM,ELJZ7B,OAAO;AACjB,AKII8B,MAAAA,KLJC9B,CKIK,CAAC+B,GLJX,GAAa/B,AKIT,CAAc,ILJlB,CKIsB,CAACwB,CHLpBxB,IDAIQ,GCAG,AGKN,EAA6BwB,CJLpB,MIKT,CAAqC,UAACC,KAAD,EAAW;ALHvD,AEDG,ADAA,AFCI,AMII,QAAA,GHLHjC,ADAAQ,EFCI,AMIG,CAACoB,CJLb,CCAA,EDAYpB,CCACR,GDAb,ECAA,EHCI,GMII,CAAqBiC,KAAK,CAACxC,IAA3B,IAAmCyC,QAAQ,CAACD,KAAK,CAACE,KAAP,CAA3C;AHJX,ADAA,AFCW9C,AMIH,OAFD,GNFIA,KAAK,CAACK,GAAN,GAAY,WIJX,ACAA,iBLID;AIHR,ACAA,ALIQ,aIJD,ACAA,IDAIsB,ACAAH,gBDAJ,ACAA,EDAP,ACAA;ADCH,ACAA,ACOO,MAAA,KAAI,CAACuB,kBAAL;ANHA,AMIH,KALD,QNCS,YAAL;AACI/C,UAAAA,KAAK,CAACK,GAAN,GAAY,2BAAZ;AACA,AMGR,SAAK2B,SAAL,CAAeW,OAAf,CAAuB,UAAAK,OAAO,EAAI;AAC9B,MAAA,KAAI,CAACb,QAAL,CAAca,OAAd,IAAyB/C,QAAQ,CAACiC,cAAT,CAAwBc,OAAxB,CAAzB;ANHA,AMIH,ILRIhC,CKML,QNFS,aAAL;ACHR,ADIYhB,AMIR,IHTK2B,ADAAJ,KISA0B,CNJGjD,KAAK,CAACK,GAAN,GAAY,GCJK,AKQzB,CAAsB,QAAtB,EAAgCoC,MAAM,CAACC,MAAP,CNJxB,AMIsC,KAAKP,QAAnB,CAAhC;ALRyB,AEA7B,ADAA,AFKY,AMIR,QLTQxB,CKSHsC,ILToB,WEAyB,CDAL,AIS7C,CAAsB,SAAtB,EAAiC,KAAKhB,YAAtC,8BLTgB,OAAS;AEAyB,ADAL,AIUhD,QHVWb,ADAAD,IAAqC,ICAK,mEDAnC,ICAI,IDA0B,ICAK;AFAzB,AEAyB,ADAL,AFMzC,QGNyBR,ADAJS,KCAyB,AHMzC,GENoC,UFMzC,0DGNiC,GDAD,OAAS,CCAK;AHO1CpB,UAAAA,KAAK,CAACK,GAAN,GAAY,6BAAZ;ACNR,AEDkD,ADAL,AFQrC,SCPHO,WAAL,GAAmB,eAAnB;AACA,SAAKD,KAAL,GAAa,UAAb,UKSauC,WAAWC,IAAI;ALR5B,AEFA,ADAA,AFQI,AMEwB,SLRvBlC,AEFAG,ADAAD,IAAL,AFQS,GERG,CCAZ,GAAgB,KDAhB,AFQI,ICNJ,GAA4B,CEF5B,GFEA;AACA,AEFA,ADAA,AFQQnB,SCNHc,AEFAH,ADAAS,CFQGpB,IGRR,CHQa,CAACK,CGRD,ADAb,EFQQ,CERQ,EFQI,GCNpB,EEFA,MDAA,gBFQQ;ACLR,AEFA,ADAA,AFQQ,AMCR,SLPKU,AEFAa,ADAAjB,CISDwC,EAAE,EJTN,GAAa,CCAb,GAAiB,CFEjB,CAAmBxC,CKODyC,CHTlB,GFEA,CCFA,AISA,EAAyB;ALN5B,AEFG,ADAA,AISID,QAAAA,CHTC9B,ADAAA,CISC,CAACsB,OAAH,CAAW,IHTf,ADAA,CCAoBvB,ADAAA,KISJwB,GHThB,ADAA,EISe,EAAW;AHR1B,ADAA,AFOI,AMEIA,SHTHlB,ADAAJ,CISGsB,KHTR,AGSa,CHTDjC,AGSEsC,GJTd,CAAgB9B,CCAhB,GDAA,QISQ,CAAuB+B,SAAvB,EAAkC,UAACG,CAAD,EAAO;AHRpD,ADAA,AFOW,AMEI,YAAA,INFE,EMEE,CAACC,CNFChD,KAAJ,CAAU,MMEZ,CAAmB+C,CAAC,CAACE,aNFnB,AMEF,CNFJ;AApBR,AMuBS,WAFD;AAGH,SAJD,8BLNW;AACf,ADOAvD,AMGC,MNHDA,CMHA,ILJKY,ADOA,CAACL,CMID,INJL,GAAc,ECPd,CDOA,ECPmB,WAAnB;AACH,ADOGP,AMIImD,MNJJnD,EMIImD,EAAE,CNJD,AMIEK,CNJDhD,MAAN,AMII,GNJW,AMIE,GNJjB,EMIsBgC,QAAlB,CHbOpB,ADAAA,UCAU,ADAA;ACCrB,ADAA,AFSArB,AMIC,MNJDA,IAAI,CGTCqB,ADAAA,AFSAX,QGTL,ADAA,GCAgBW,ADAAA,AFShB,CAAiBpB,KAAjB,EGTA,ADAA;ACCH,ADAA,AFSA,AMIA;kCLZaW,OAAO;AACjB,WAAKA,KAAL,GAAaA,KAAb;AACH,2BEFMA,IDAIQ,GCAG,AGaAgC,GJbG,CIaC;AHZd,ADAA,AIaA,UAAMM,CHbD9C,ADAAQ,GIaK,CJbV,CCAA,CGaalB,CJbDkB,CCACR,GDAb,ECAA,CGaqB,CAACuB,cAAT,WAA2BiB,EAAE,CAAC/C,IAA9B,WAAb;AHZH,ADAA,AIaGqD,MAAAA,IAAI,CAACC,SAAL,GAAiBP,EAAE,CAACL,KAApB;AACH;;;yCACoB;AACjB,WAAKR,IAAL,CAAUzC,SAAV,GAAsB,EAAtB;;AACA,WAAK,IAAI8D,GAAT,IAAgB,KAAKpB,eAArB,EAAsC;AAClC,aAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrB,eAAL,CAAqBoB,GAArB,CAApB,EAA+CC,CAAC,EAAhD,EAAoD;AAChD,cAAI/D,SAAS,SAAb;;AACA,kBAAQ8D,GAAR;AACI,iBAAK,aAAL;AACI9D,cAAAA,SAAS,GAAG,KAAKuC,sBAAL,CAA4ByB,WAA5B,EAAZ;AACA;;AACJ,iBAAK,YAAL;AACIhE,cAAAA,SAAS,GAAG,KAAKuC,sBAAL,CAA4B0B,UAA5B,EAAZ;AACA;;AACJ,iBAAK,aAAL;AACIjE,cAAAA,SAAS,GAAG,KAAKuC,sBAAL,CAA4B2B,WAA5B,EAAZ;AACA;;AACJ,iBAAK,aAAL;AACIlE,cAAAA,SAAS,GAAG,KAAKwC,sBAAL,CAA4BwB,WAA5B,EAAZ;AACA;;AACJ,iBAAK,YAAL;AACIhE,cAAAA,SAAS,GAAG,KAAKwC,sBAAL,CAA4ByB,UAA5B,EAAZ;AACA;;AACJ,iBAAK,aAAL;AACIjE,cAAAA,SAAS,GAAG,KAAKwC,sBAAL,CAA4B0B,WAA5B,EAAZ;AACA;;AACJ;AACI,oBAAM,IAAIzD,KAAJ,CAAU,mBAAV,CAAN;AApBR;;AAsBA,eAAKgC,IAAL,CAAU0B,qBAAV,CAAgCnE,SAAhC;AACA,eAAKoE,aAAL;AACH;AACJ;AACJ;;;oCACe;AAAA;;AACZ,UAAMC,MAAM,GAAGjE,QAAQ,CAACiC,cAAT,CAAwB,QAAxB,CAAf;AACAgC,MAAAA,MAAM,CAACR,SAAP,GAAmB,EAAnB;AACA,WAAKpB,IAAL,CAAUzC,SAAV,CAAoB8C,OAApB,CAA4B,UAAA9C,SAAS,EAAI;AACrC,QAAA,MAAI,CAACyC,IAAL,CAAU2B,aAAV,CAAwBC,MAAxB,EAAgCrE,SAAhC;AACH,OAFD;AAGH","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["export class Room {\n    constructor() {\n        this.furniture = [];\n    }\n    addFurnitureToTheRoom(furniture) {\n        this.furniture.push(furniture);\n    }\n    visualiseRoom(root, furniture) {\n        const image = document.createElement(\"img\");\n        switch (furniture.constructor.name) {\n            case 'ModernChair':\n                image.src = '/modern-chair.8d94ab2a.jpg';\n                break;\n            case 'ModernTable':\n                image.src = '/modern-table.ad992a07.jpg';\n                break;\n            case 'ModernSofa':\n                image.src = '/modern-sofa.e7929329.jpg';\n                break;\n            case 'GothicChair':\n                image.src = '/gothic-chair.495b01aa.png';\n                break;\n            case 'GothicTable':\n                image.src = '/gothic-table.24882c3c.jpeg';\n                break;\n            case 'GothicSofa':\n                image.src = '/gothic-sofa.f5134f72.jpg';\n                break;\n            default:\n                throw new Error('No constructor found');\n        }\n        image.width = 150;\n        image.height = 150;\n        root.appendChild(image);\n    }\n}\n","export class GothicChair {\n    constructor(color = 'black') {\n        this.peacesState = 'not connected';\n        this.color = 'no color';\n        this.metalChairLeg = true;\n        this.connectAllPeases();\n        this.paintTheChair(color);\n    }\n    connectAllPeases() {\n        this.peacesState = 'connected';\n    }\n    paintTheChair(color) {\n        this.color = color;\n    }\n}\nexport class ModernChair {\n    constructor(color = 'white') {\n        this.peacesState = 'not connected';\n        this.color = 'no color';\n        this.comfortableChairBack = true;\n        this.connectAllPeases();\n        this.paintTheChair(color);\n    }\n    connectAllPeases() {\n        this.peacesState = 'connected';\n    }\n    paintTheChair(color) {\n        this.color = color;\n    }\n}\n","export class ModernTable {\n    constructor(form = 'rectangle', material = 'wood') {\n        this.form = 'no form';\n        this.material = 'no material';\n        this.color = 'white';\n        this.chooseMaterial(material);\n        this.createForm(form);\n    }\n    chooseMaterial(material) {\n        this.material = material;\n    }\n    createForm(form) {\n        this.form = form;\n    }\n}\nexport class GothicTable {\n    constructor(form = 'circle', material = 'metal') {\n        this.form = 'no form';\n        this.material = 'no material';\n        this.color = 'dark brown';\n        this.chooseMaterial(material);\n        this.createForm(form);\n    }\n    chooseMaterial(material) {\n        this.material = material;\n    }\n    createForm(form) {\n        this.form = form;\n    }\n}\n","export class ModernSofa {\n    constructor(material = 'cotton and linen', color = 'gray') {\n        this.material = 'no material';\n        this.color = 'no color';\n        this.softSeats = true;\n        this.chooseMaterial(material);\n        this.design(color);\n    }\n    chooseMaterial(material) {\n        this.material = material;\n    }\n    design(color) {\n        this.color = color;\n    }\n}\nexport class GothicSofa {\n    constructor(material = 'velvet', color = 'dark blue') {\n        this.material = 'no material';\n        this.color = 'no color';\n        this.hardSeats = true;\n        this.chooseMaterial(material);\n        this.design(color);\n    }\n    chooseMaterial(material) {\n        this.material = material;\n    }\n    design(color) {\n        this.color = color;\n    }\n}\n","import { GothicChair } from \"../furniture/Chair\";\nimport { GothicTable } from \"../furniture/Table\";\nimport { GothicSofa } from \"../furniture/Sofa\";\nexport class GothicFurnitureFactory {\n    createChair() {\n        return new GothicChair();\n    }\n    createTable() {\n        return new GothicTable();\n    }\n    createSofa() {\n        return new GothicSofa();\n    }\n}\n","import { ModernChair } from \"../furniture/Chair\";\nimport { ModernTable } from \"../furniture/Table\";\nimport { ModernSofa } from \"../furniture/Sofa\";\nexport class ModernFurnitureFactory {\n    createChair() {\n        return new ModernChair();\n    }\n    createTable() {\n        return new ModernTable();\n    }\n    createSofa() {\n        return new ModernSofa();\n    }\n}\n","import { Room } from '../logic/Room';\nimport { GothicFurnitureFactory } from '../logic/GothicFurnitureFactory';\nimport { ModernFurnitureFactory } from '../logic/ModernFurnitureFactory';\nexport class Dom {\n    constructor() {\n        this.inputsIds = [\n            'modernChairInput', 'modernTableInput', 'modernSofaInput',\n            'gothicChairInput', 'gothicTableInput', 'gothicSofaInput'\n        ];\n        this.submitButton = document.getElementById('submit');\n        this.elements = {};\n        this.modernFurnitureFactory = new ModernFurnitureFactory();\n        this.gothicFurnitureFactory = new GothicFurnitureFactory();\n        this.room = new Room();\n        this.furnitureAmount = {};\n        this.onSubmit = () => {\n            Object.values(this.elements).forEach((input) => {\n                this.furnitureAmount[input.name] = parseInt(input.value);\n            });\n            this.addFurnitureToRoom();\n        };\n        this.inputsIds.forEach(inputId => {\n            this.elements[inputId] = document.getElementById(inputId);\n        });\n        this.addEventListener('change', Object.values(this.elements));\n        this.addEventListener('onclick', this.submitButton);\n    }\n    addEventListener(eventName, el) {\n        if (el instanceof Array) {\n            el.forEach((input) => {\n                input.addEventListener(eventName, (e) => {\n                    this.onInputChange(e.currentTarget);\n                });\n            });\n        }\n        else {\n            el.onclick = this.onSubmit;\n        }\n    }\n    onInputChange(el) {\n        const span = document.getElementById(`${el.name}Value`);\n        span.innerHTML = el.value;\n    }\n    addFurnitureToRoom() {\n        this.room.furniture = [];\n        for (let key in this.furnitureAmount) {\n            for (let i = 0; i < this.furnitureAmount[key]; i++) {\n                let furniture;\n                switch (key) {\n                    case 'modernChair':\n                        furniture = this.modernFurnitureFactory.createChair();\n                        break;\n                    case 'modernSofa':\n                        furniture = this.modernFurnitureFactory.createSofa();\n                        break;\n                    case 'modernTable':\n                        furniture = this.modernFurnitureFactory.createTable();\n                        break;\n                    case 'gothicChair':\n                        furniture = this.gothicFurnitureFactory.createChair();\n                        break;\n                    case 'gothicSofa':\n                        furniture = this.gothicFurnitureFactory.createSofa();\n                        break;\n                    case 'gothicTable':\n                        furniture = this.gothicFurnitureFactory.createTable();\n                        break;\n                    default:\n                        throw new Error('Invalid furniture');\n                }\n                this.room.addFurnitureToTheRoom(furniture);\n                this.visualiseRoom();\n            }\n        }\n    }\n    visualiseRoom() {\n        const images = document.getElementById('images');\n        images.innerHTML = '';\n        this.room.furniture.forEach(furniture => {\n            this.room.visualiseRoom(images, furniture);\n        });\n    }\n}\n","import { Dom } from \"./view/Dom\";\nnew Dom();\n// const root = document.getElementById('root') as HTMLDivElement;\n// const firstInput = document.getElementById('modernChairInput') as HTMLInputElement;\n// firstInput.addEventListener('change', (e: Event): void => {\n//     changeHTML(e.currentTarget as HTMLInputElement);\n// })\n// let val: HTMLSpanElement;\n// if (firstInput.value) {\n//     val = document.getElementById('modernChairValue') as HTMLSpanElement;\n//     val.innerHTML = firstInput.value;\n// }\n// function changeHTML(el: HTMLInputElement) {\n//     if(el.value) {\n//         val.innerHTML = el.value;\n//     }\n// }\n"]}